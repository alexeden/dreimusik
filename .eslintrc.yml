---
root: true
extends:
  - "react-app"
  - "plugin:react/recommended"
  - "plugin:@typescript-eslint/eslint-recommended"
  - "plugin:@typescript-eslint/recommended"
  - "plugin:@typescript-eslint/recommended-requiring-type-checking"
  - 'eslint-config-airbnb-base'

plugins:
  - "@typescript-eslint"
  - react
  - babel
  - react-hooks
parser: "@typescript-eslint/parser"
parserOptions:
  ecmaVersion: 2018
  sourceType: module
  project: "./tsconfig.json"
  ecmaFeatures:
    jsx: true
  warnOnUnsupportedTypeScriptVersion: true

rules:
  react-hooks/rules-of-hooks: error
  react-hooks/exhaustive-deps: error

  react/jsx-closing-tag-location: error
  react/jsx-tag-spacing: error
  react/jsx-closing-bracket-location: error

  arrow-parens:
    - error
    - "as-needed"

  no-param-reassign:
    - error
    - props: false

  no-console:
    - error
    - allow:
      - error

  array-bracket-spacing:
    - error
    - always

  comma-dangle:
    - error
    - arrays: 'always'
      objects: 'always'
      imports: 'always'
      exports: 'always'
      functions: 'never'

  "@typescript-eslint/array-type":
    - error
    - default: "array-simple"

  default-case: "off"
  no-dupe-class-members: "off"
  no-undef: "off"
  "@typescript-eslint/consistent-type-assertions": warn

  "@typescript-eslint/class-literal-property-style":
    - warn
    - fields

  "@typescript-eslint/consistent-type-definitions":
    - off
    - type

  "@typescript-eslint/explicit-member-accessibility":
    - error
    - accessibility: "no-public"

  indent: 0
  "@typescript-eslint/indent":
    - error
    - 2

  "func-call-spacing": 0
  "@typescript-eslint/func-call-spacing":
    - error

  "keyword-spacing": 0
  "@typescript-eslint/keyword-spacing":
    - error

  "comma-spacing": "off"
  "@typescript-eslint/comma-spacing":
    - error

  "@typescript-eslint/no-extraneous-class":
    - error
    - allowStaticOnly: true

  "@typescript-eslint/explicit-function-return-type": off

  "@typescript-eslint/explicit-module-boundary-types": off
  # TODO: Turn this back on in next commit
  "@typescript-eslint/no-explicit-any": off

  # TS will handle this on its own
  "import/no-unresolved": off
  "import/extensions": off

  # TS will yell if no prop type is provided
  "react/prop-types": off

  "no-mixed-operators": 0

  # TS will catch
  "consistent-return": 0

  "import/prefer-default-export": 0

  "@typescript-eslint/member-delimiter-style":
    - error

  "@typescript-eslint/naming-convention":
    - error
    # Type definitions should always be PascalCase
    - selector: typeLike
      format:
        - StrictPascalCase
      leadingUnderscore: allow
      trailingUnderscore: forbid

    # Names of normal variables must be camelCase or SNAKE_CASE, no underscore
    - selector: variableLike
      leadingUnderscore: forbid
      trailingUnderscore: forbid
      filter:
        match: false
        regex: _id|_
      format: null
    - selector: memberLike
      leadingUnderscore: forbid
      trailingUnderscore: forbid
      filter:
        match: false
        regex: _id
      format: null
    - selector: typeParameter
      format:
        - StrictPascalCase

  no-array-constructor: "off"

  "@typescript-eslint/no-array-constructor": error
  "@typescript-eslint/no-dynamic-delete": error
  "@typescript-eslint/no-extra-non-null-assertion": error
  "@typescript-eslint/no-floating-promises":
    - error
    - ignoreVoid: true
      ignoreIIFE: true
  "@typescript-eslint/no-non-null-asserted-optional-chain": error
  "@typescript-eslint/no-non-null-assertion": off
  "@typescript-eslint/no-unnecessary-qualifier": error
  "@typescript-eslint/no-unnecessary-type-arguments": error
  "@typescript-eslint/no-unsafe-assignment": off
  "@typescript-eslint/no-unsafe-member-access": off
  "@typescript-eslint/no-unsafe-return": off
  "@typescript-eslint/prefer-includes": error
  "@typescript-eslint/prefer-nullish-coalescing": error
  "@typescript-eslint/prefer-optional-chain": error
  "@typescript-eslint/prefer-readonly": error
  "@typescript-eslint/prefer-reduce-type-parameter": error
  "@typescript-eslint/restrict-plus-operands": error
  "semi": 0
  "@typescript-eslint/semi": error
  "@typescript-eslint/switch-exhaustiveness-check": error

  "@typescript-eslint/unbound-method":
    - error
    - ignoreStatic: true

  no-use-before-define: "off"

  no-nested-ternary: 0

  "@typescript-eslint/no-use-before-define":
    - warn
    - functions: false
      classes: false
      variables: false
      typedefs: false

  no-unused-expressions: "off"
  "@typescript-eslint/no-unused-expressions":
    - error
    - allowShortCircuit: true
      allowTernary: true
      allowTaggedTemplates: true

  no-unused-vars: "off"
  "@typescript-eslint/no-unused-vars":
    - warn
    - args: none
      ignoreRestSiblings: true

  no-useless-constructor: "off"
  "@typescript-eslint/no-useless-constructor": warn
